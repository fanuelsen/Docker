version: "3.6"

services:
  drone-server:
    container_name: drone
    image: drone/drone
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - drone-data:/data
    environment:
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_GITEA_CLIENT_ID=wjlCyEhynRv/apXavLtk4nEOCNFxGTkZYEGq4gubWPE=
      - DRONE_GITEA_CLIENT_SECRET=6I7dANYO4/leaOzFtleT7kvJ60NsIDXTU1emOeJcqPU=
      - DRONE_GITEA_SERVER=https://gitea.example.org
      - DRONE_SERVER_HOST=drone.example.org
      - DRONE_SERVER_PROTO=https
      - DRONE_RPC_SECRET=0ebc1b4be0dc5039da146d304da47f4c
    labels:
      - traefik.enable=true
      - traefik.http.routers.drone.rule=Host(`drone.example.org`)
      - traefik.http.routers.drone.entrypoints=websecure
      - traefik.http.routers.drone.tls=true
      - traefik.http.routers.drone.tls.certresolver=http
      - traefik.http.routers.drone.middlewares=security-headers
      - traefik.http.routers.drone.tls.options=default
      - traefik.http.services.drone.loadbalancer.server.port=80

  drone-runner:
    container_name: drone-runner
    image: drone/drone-runner-docker
    environment:
      DRONE_RPC_HOST: drone.example.org
      DRONE_RPC_PROTO: https
      DRONE_RPC_SECRET: 0ebc1b4be0dc5039da146d304da47f4c
      DRONE_RUNNER_CAPACITY: 1
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  traefik:
    external: true
volumes:
  drone-data:
